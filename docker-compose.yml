version: '3'

services:
  # Servicio de base de datos MySQL
  db:
    image: mysql:8.0
    container_name: turnos-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - turnos-network

  # Servicio de phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: turnos-phpmyadmin
    restart: always
    depends_on:
      - db
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "8080:80"
    networks:
      - turnos-network

  frontend:
    build: ./frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:3000/api

  # Servicio de backend con Express.js
  backend:
    build: 
      context: ./backend
    container_name: turnos-backend
    restart: always
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      DB_NAME: ${MYSQL_DATABASE}
      NODE_ENV: development
      PORT: 3000
    ports:
      - "3000:3000"
      - "9229:9229"  # Puerto para el depurador de Node.js
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - turnos-network
    command: npm run dev

networks:
  turnos-network:
    driver: bridge

volumes:
  mysql-data: